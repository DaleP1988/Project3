{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/Booking.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport InstructorCard from \"../components/InstructorCard\";\nimport { Card, Input, Icon, Button, Modal } from \"react-materialize\";\nimport background from \"../images/floor2.jpg\";\nimport InstructorSchedule from \"../components/InstructorSchedule\";\nimport API from \"../utils/API\";\nimport { PromiseProvider } from \"mongoose\";\n\nvar Booking =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Booking, _Component);\n\n  function Booking() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Booking);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Booking)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Instructor: \"Johnny Salke\",\n      City: \"\",\n      InstructorSchedules: [],\n      InstructorBio: [],\n      Day: \"\",\n      Time: \"\" // Modal: []\n\n    };\n\n    _this.getInstructorName = function () {\n      var instructorName = sessionStorage.getItem(\"key\"); // save the data from the other page\n\n      _this.setState({\n        Instructor: instructorName\n      });\n    };\n\n    _this.fillAbbrevProfile = function () {\n      API.getCP(_this.state.name, _this.state.loc).then(function (res) {\n        _this.setState({\n          clients: res.data\n        });\n      });\n    };\n\n    _this.renderInstructorBio = function () {\n      return _this.state.InstructorBio.map(function (schedule) {\n        return React.createElement(InstructorCard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"-id=\", schedule._id, \"key=\", schedule._id, \"name = \", InstructorBio.name, \"email = \", InstructorBio.email, \"phone = \", InstructorBio.phone, \"location = \", classList.location);\n      });\n    };\n\n    _this.handleDateChange = function (event) {\n      _this.setState({\n        Time: event.target.value\n      });\n    };\n\n    _this.handleTimeInput = function (event) {\n      _this.setState({\n        Day: event.target.value\n      });\n    };\n\n    _this.findSchedule = function () {\n      API.getClasses(_this.state.Instructor).then(function (res) {\n        var responseArray = typeof res.data.response.docs !== \"undefined\" ? res.data.response.docs : [];\n\n        if (responseArray) {\n          classList = responseArray.Classes.class;\n        }\n\n        _this.setState({\n          InstructorSchedules: classList\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.renderInstructorSchedule = function () {\n      return _this.state.InstructorSchedules.map(function (schedule) {\n        return React.createElement(InstructorSchedule, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"-id=\", schedule._id, \"key=\", schedule._id, \"className =\", \" \", InstructorSchedules.classList.ClassDescription.SessionType.Name, \"level = \", InstructorSchedules.classList.ClassDescription.Level.Name, \"description =\", \" \", InstructorSchedules.classList.ClassDescription.Description, \"location = \", InstructorSchedules.classList.Location.City, \"date = \", InstructorSchedules.classList.StartDateTime, \"time = \", InstructorSchedules.classList.StartDateTime, \"studio = \", InstructorSchedules.classList.Location.City.Name, \"spots = \", InstructorSchedules.classList.IsAvailable, \"cancellation = \", InstructorSchedules.classList.IsCanceled, \"registration =\", \" \", InstructorSchedules.classList.ClassDescription.Program.ScheduleType, \"address = \", InstructorSchedules.classList.Location.Address);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Booking, [{\n    key: \"componentDidMount\",\n    //when component mounts, get instructor from session storage, load to this.state.instructorSchedule\n    value: function componentDidMount() {\n      this.getInstructorName();\n      this.findSchedules();\n    } /////////////////////\n    ///abbrv profile/////\n    /////////////////////\n    //function to get the instructor name from session storage\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parallax-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        id: \"booking-section\",\n        className: \"white responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        id: \"search-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        id: \"search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"event\"), \"CLASS SCHEDULER\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.renderInstructorBio()), React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Request an Introductory Session\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col m12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Date\",\n        id: \"datePick\",\n        type: \"text\",\n        class: \"datepicker\",\n        onChange: props.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"datePick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Select a date\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col m12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Time\",\n        id: \"timePick\",\n        type: \"text\",\n        class: \"timepicker\",\n        onChange: props.handleTimeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"timePick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Select a time\"))), React.createElement(Modal, {\n        header: \"Thanks for booking!\",\n        className: \" waves-effect waves-light\",\n        trigger: React.createElement(Button, {\n          className: \"waves-effect waves-light btn-small\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Submit\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Your request for a session on \", props.Day, \" at\", \" \", props.Time, \" has been submitted. \", props.Instructor, \" will contact you directly.\"))))))), React.createElement(\"div\", {\n        className: \"parallax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"background-img\",\n        src: background,\n        alt: \"Unsplashed background img 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"section-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"RESULTS\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {},\n        className: \"\",\n        id: \"booking-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.renderInstructorSchedule()))))));\n    }\n  }]);\n\n  return Booking;\n}(Component);\n\nexport default Booking;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/Booking.js"],"names":["React","Component","Col","Row","Container","InstructorCard","Card","Input","Icon","Button","Modal","background","InstructorSchedule","API","PromiseProvider","Booking","state","Instructor","City","InstructorSchedules","InstructorBio","Day","Time","getInstructorName","instructorName","sessionStorage","getItem","setState","fillAbbrevProfile","getCP","name","loc","then","res","clients","data","renderInstructorBio","map","schedule","_id","email","phone","classList","location","handleDateChange","event","target","value","handleTimeInput","findSchedule","getClasses","responseArray","response","docs","Classes","class","catch","err","console","log","renderInstructorSchedule","ClassDescription","SessionType","Name","Level","Description","Location","StartDateTime","IsAvailable","IsCanceled","Program","ScheduleType","Address","findSchedules","marginTop","props","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport InstructorCard from \"../components/InstructorCard\";\nimport { Card, Input, Icon, Button, Modal } from \"react-materialize\";\nimport background from \"../images/floor2.jpg\";\nimport InstructorSchedule from \"../components/InstructorSchedule\";\nimport API from \"../utils/API\";\nimport { PromiseProvider } from \"mongoose\";\n\nclass Booking extends Component {\n  state = {\n    Instructor: \"Johnny Salke\",\n    City: \"\",\n    InstructorSchedules: [],\n    InstructorBio: [],\n    Day: \"\",\n    Time: \"\"\n    // Modal: []\n  };\n\n  //when component mounts, get instructor from session storage, load to this.state.instructorSchedule\n\n  componentDidMount() {\n    this.getInstructorName();\n    this.findSchedules();\n  }\n\n  /////////////////////\n  ///abbrv profile/////\n  /////////////////////\n\n  //function to get the instructor name from session storage\n\n  getInstructorName = () => {\n    var instructorName = sessionStorage.getItem(\"key\");\n    // save the data from the other page\n    this.setState({ Instructor: instructorName });\n  };\n\n  // funciton to get the profile data into card\n\n  fillAbbrevProfile = () => {\n    API.getCP(this.state.name, this.state.loc).then(res => {\n      this.setState({ clients: res.data });\n    });\n  };\n\n  // method to create a single card div\n  // instructor card\n\n  renderInstructorBio = () => {\n    return this.state.InstructorBio.map(schedule => (\n      <InstructorCard>\n        -id={schedule._id}\n        key={schedule._id}\n        name = {InstructorBio.name}\n        email = {InstructorBio.email}\n        phone = {InstructorBio.phone}\n        location = {classList.location}\n      </InstructorCard>\n    ));\n  };\n\n  //////////////////\n  //BOOKING INPUT///\n  //////////////////\n\n  //method for getting the date input\n\n  handleDateChange = event => {\n    this.setState({ Time: event.target.value });\n  };\n\n  //method for getting the time input\n\n  handleTimeInput = event => {\n    this.setState({ Day: event.target.value });\n  };\n\n  //////////////////\n  ///MODAL BUILD///\n  /////////////////\n\n  //not sure if above will return the right result\n\n  // method for rendering the modal div\n  // may not need this method. can just do the\n\n  // renderModal = () => {\n  //   return this.state.Modal.map(schedule => (\n  //     <BookingResult>\n  //       -id={schedule._id}\n  //       key={schedule._id}\n  //       name = {Modal.name}\n  //       location = {Modal.location}\n  //       studio = {Modal.studio}\n  //       email = {Modal.email}\n  //       phone = {Modal.phone}\n  //     </BookingResult>\n  //   ));\n  // };\n\n  ///////////////////\n  ///FILL SCHEDULE//\n  //////////////////\n\n  //function to search with the name. for the axios call to MBO\n  // make sure it gets the right instructor\n\n  findSchedule = () => {\n    API.getClasses(this.state.Instructor)\n      .then(res => {\n        var responseArray =\n          typeof res.data.response.docs !== \"undefined\"\n            ? res.data.response.docs\n            : [];\n        if (responseArray) {\n          classList = responseArray.Classes.class;\n        }\n        this.setState({ InstructorSchedules: classList });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //method for rendering one instructor schedule div\n\n  renderInstructorSchedule = () => {\n    return this.state.InstructorSchedules.map(schedule => (\n      <InstructorSchedule>\n        -id={schedule._id}\n        key={schedule._id}\n        className ={\" \"}\n        {InstructorSchedules.classList.ClassDescription.SessionType.Name}\n        level = {InstructorSchedules.classList.ClassDescription.Level.Name}\n        description ={\" \"}\n        {InstructorSchedules.classList.ClassDescription.Description}\n        location = {InstructorSchedules.classList.Location.City}\n        date = {InstructorSchedules.classList.StartDateTime}\n        time = {InstructorSchedules.classList.StartDateTime}\n        studio = {InstructorSchedules.classList.Location.City.Name}\n        spots = {InstructorSchedules.classList.IsAvailable}\n        cancellation = {InstructorSchedules.classList.IsCanceled}\n        registration ={\" \"}\n        {InstructorSchedules.classList.ClassDescription.Program.ScheduleType}\n        address = {InstructorSchedules.classList.Location.Address}\n      </InstructorSchedule>\n    ));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"parallax-container\">\n          <Container>\n            <div\n              style={{ marginTop: \"20px\" }}\n              id=\"booking-section\"\n              className=\"white responsive\"\n            >\n              <Row>\n                <div className=\"center\" id=\"search-heading\">\n                  <h2 className=\"center\" id=\"search-title\">\n                    <Icon className=\"medium\">event</Icon>\n                    CLASS SCHEDULER\n                  </h2>\n                </div>\n              </Row>\n              <Row>\n                <Col size=\"6\">{this.renderInstructorBio()}</Col>\n                <Col size=\"6\">\n                  <Card title=\"Request an Introductory Session\">\n                    <Row>\n                      <div className=\"input-field col m12\">\n                        <input\n                          placeholder=\"Date\"\n                          id=\"datePick\"\n                          type=\"text\"\n                          class=\"datepicker\"\n                          onChange={props.handleDateChange}\n                        />\n                        <label for=\"datePick\">Select a date</label>\n                      </div>\n                    </Row>\n                    <Row>\n                      <div className=\"input-field col m12\">\n                        <input\n                          placeholder=\"Time\"\n                          id=\"timePick\"\n                          type=\"text\"\n                          class=\"timepicker\"\n                          onChange={props.handleTimeInput}\n                        />\n                        <label for=\"timePick\">Select a time</label>\n                      </div>\n                    </Row>\n                    <Modal\n                      header=\"Thanks for booking!\"\n                      className=\" waves-effect waves-light\"\n                      trigger={\n                        <Button\n                          className=\"waves-effect waves-light btn-small\"\n                          type=\"submit\"\n                        >\n                          Submit\n                        </Button>\n                      }\n                    >\n                      <p>\n                        Your request for a session on {props.Day} at{\" \"}\n                        {props.Time} has been submitted. {props.Instructor} will\n                        contact you directly.\n                      </p>\n                    </Modal>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"parallax\">\n            <img\n              className=\"background-img\"\n              src={background}\n              alt=\"Unsplashed background img 1\"\n            />\n          </div>\n        </div>\n        <div className=\"section-white\">\n          <Container style={{ height: \"400px\" }}>\n            <h2 className=\"center\">RESULTS</h2>\n            <Row>\n              <Col size=\"12\">\n                <div style={{}} className=\"\" id=\"booking-results\">\n                  {this.renderInstructorSchedule()}\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Booking;\n"]},"metadata":{},"sourceType":"module"}