{"ast":null,"code":"var select = require('xpath.js');\n\nfunction findAttr(node, localName, namespace) {\n  for (var i = 0; i < node.attributes.length; i++) {\n    var attr = node.attributes[i];\n\n    if (attrEqualsExplicitly(attr, localName, namespace) || attrEqualsImplicitly(attr, localName, namespace, node)) {\n      return attr;\n    }\n  }\n\n  return null;\n}\n\nfunction findFirst(doc, xpath) {\n  var nodes = select(doc, xpath);\n  if (nodes.length == 0) throw \"could not find xpath \" + xpath;\n  return nodes[0];\n}\n\nfunction findChilds(node, localName, namespace) {\n  node = node.documentElement || node;\n  var res = [];\n\n  for (var i = 0; i < node.childNodes.length; i++) {\n    var child = node.childNodes[i];\n\n    if (child.localName == localName && (child.namespaceURI == namespace || !namespace)) {\n      res.push(child);\n    }\n  }\n\n  return res;\n}\n\nfunction attrEqualsExplicitly(attr, localName, namespace) {\n  return attr.localName == localName && (attr.namespaceURI == namespace || !namespace);\n}\n\nfunction attrEqualsImplicitly(attr, localName, namespace, node) {\n  return attr.localName == localName && (!attr.namespaceURI && node.namespaceURI == namespace || !namespace);\n}\n\nvar xml_special_to_encoded_attribute = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\r': '&#xD;',\n  '\\n': '&#xA;',\n  '\\t': '&#x9;'\n};\nvar xml_special_to_encoded_text = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\\r': '&#xD;'\n};\n\nfunction encodeSpecialCharactersInAttribute(attributeValue) {\n  return attributeValue.replace(/[\\r\\n\\t ]+/g, ' ') // White space normalization (Note: this should normally be done by the xml parser) See: https://www.w3.org/TR/xml/#AVNormalize\n  .replace(/([&<\"\\r\\n\\t])/g, function (str, item) {\n    // Special character normalization. See:\n    // - https://www.w3.org/TR/xml-c14n#ProcessingModel (Attribute Nodes)\n    // - https://www.w3.org/TR/xml-c14n#Example-Chars\n    return xml_special_to_encoded_attribute[item];\n  });\n}\n\nfunction encodeSpecialCharactersInText(text) {\n  return text.replace(/\\r\\n?/g, '\\n') // Line ending normalization (Note: this should normally be done by the xml parser). See: https://www.w3.org/TR/xml/#sec-line-ends\n  .replace(/([&<>\\r])/g, function (str, item) {\n    // Special character normalization. See:\n    // - https://www.w3.org/TR/xml-c14n#ProcessingModel (Text Nodes)\n    // - https://www.w3.org/TR/xml-c14n#Example-Chars\n    return xml_special_to_encoded_text[item];\n  });\n}\n\nexports.findAttr = findAttr;\nexports.findChilds = findChilds;\nexports.encodeSpecialCharactersInAttribute = encodeSpecialCharactersInAttribute;\nexports.encodeSpecialCharactersInText = encodeSpecialCharactersInText;\nexports.findFirst = findFirst;","map":null,"metadata":{},"sourceType":"script"}