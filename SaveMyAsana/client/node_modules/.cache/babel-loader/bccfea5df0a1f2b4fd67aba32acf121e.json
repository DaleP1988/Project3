{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/Client.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Icon } from \"react-materialize\";\nimport background from \"../images/floor2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport headstand from \"../images/headstand.png\";\nimport ClientResultContact from \"../components/ResultDivs/ClientResultContact\";\nimport ClientResultBio from \"../components/ResultDivs/ClientResultBio\"; //need to be directed from form page, fill in the data, change the state\n// use functions defined client side in API.js (utils)\n// make sure to disable the links until the login happens\n//\n\nvar Client =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Client, _Component);\n\n  function Client() {\n    _classCallCheck(this, Client);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Client).apply(this, arguments));\n  }\n\n  _createClass(Client, [{\n    key: \"render\",\n    // state = {\n    //   iSurvey: [],\n    //   iClient: []\n    // };\n    // componentDidMount() {\n    //   this.getClientProfile();\n    //   //can I just call all the others here?\n    // }\n    // //Method for getting the saved survey from the db\n    // getClientProfile = () => {\n    //   API.getCP().then(res => {\n    //     this.setState({ iSurvey: res.data });\n    //     //can I add code right into here for the rendering?\n    //   });\n    // };\n    // // method for rendering a results div\n    // renderclientProfContact = () => {\n    //   return this.state.iProf.map(iProf => (\n    //     <ClientResultContact>\n    //       {/* need to make a results component */}\n    //       {/* this needs to reference the client components */}\n    //       -id={iProf.id}\n    //       key={iProf._id}\n    //       name={iProf.Firstname + iProf.Lastname}\n    //       email={iProf.email}\n    //       phone={iProf.phone}\n    //       city={iProf.city}\n    //       loc={iProf.loc}\n    //       img={iProf.img}\n    //     </ClientResultContact>\n    //   ));\n    // };\n    // renderinstructorProfBio = () => {\n    //   return this.state.iProf.map(iProf => (\n    //     <ClientResultBio>\n    //       {/* need to make a results component */}\n    //       {/* this needs to reference the client components */}\n    //       -id={iProf.id}\n    //       key={iProf._id}\n    //       about={iProf.q1}\n    //       style={iProf.q2}\n    //       background={iProf.q3}\n    //       transformative={iProf.q4}\n    //       message={iProf.q5}\n    //       wisdom={iProf.q6}\n    //       goodie={iProf.q7}\n    //     </ClientResultBio>\n    //   ));\n    // };\n    // class Client extends Component {\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parallax-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"white center\",\n        id: \"search-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"center\",\n        id: \"search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: headstand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \"), \"CLIENT NAME: LOCATION: STUDIO:\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"white center\",\n        id: \"search-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"center\",\n        id: \"search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"change to the example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \" \"), \"image\"))), React.createElement(Col, {\n        size: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.renderclientProfContact())))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.renderclientProfBio()))))), React.createElement(\"div\", {\n        className: \"parallax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"background-img\",\n        src: background,\n        alt: \"Unsplashed background img 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"section-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Namaste\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"\\\"Yoga Is a light with once lit will never dim, the better your practice the brighter your flame.\\\"\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"- B.K.S. Iyengar\"))), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Client;\n}(Component);\n\nexport default Client;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/Client.js"],"names":["React","Component","Col","Row","Container","Icon","background","Link","headstand","ClientResultContact","ClientResultBio","Client","renderclientProfContact","renderclientProfBio"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Icon } from \"react-materialize\";\nimport background from \"../images/floor2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport headstand from \"../images/headstand.png\";\nimport ClientResultContact from \"../components/ResultDivs/ClientResultContact\";\nimport ClientResultBio from \"../components/ResultDivs/ClientResultBio\";\n\n//need to be directed from form page, fill in the data, change the state\n// use functions defined client side in API.js (utils)\n// make sure to disable the links until the login happens\n//\n\nclass Client extends Component {\n  // state = {\n  //   iSurvey: [],\n  //   iClient: []\n  // };\n\n  // componentDidMount() {\n  //   this.getClientProfile();\n  //   //can I just call all the others here?\n  // }\n\n  // //Method for getting the saved survey from the db\n  // getClientProfile = () => {\n  //   API.getCP().then(res => {\n  //     this.setState({ iSurvey: res.data });\n\n  //     //can I add code right into here for the rendering?\n  //   });\n  // };\n\n  // // method for rendering a results div\n\n  // renderclientProfContact = () => {\n  //   return this.state.iProf.map(iProf => (\n  //     <ClientResultContact>\n  //       {/* need to make a results component */}\n  //       {/* this needs to reference the client components */}\n  //       -id={iProf.id}\n  //       key={iProf._id}\n  //       name={iProf.Firstname + iProf.Lastname}\n  //       email={iProf.email}\n  //       phone={iProf.phone}\n  //       city={iProf.city}\n  //       loc={iProf.loc}\n  //       img={iProf.img}\n  //     </ClientResultContact>\n  //   ));\n  // };\n\n  // renderinstructorProfBio = () => {\n  //   return this.state.iProf.map(iProf => (\n  //     <ClientResultBio>\n  //       {/* need to make a results component */}\n  //       {/* this needs to reference the client components */}\n  //       -id={iProf.id}\n  //       key={iProf._id}\n  //       about={iProf.q1}\n  //       style={iProf.q2}\n  //       background={iProf.q3}\n  //       transformative={iProf.q4}\n  //       message={iProf.q5}\n  //       wisdom={iProf.q6}\n  //       goodie={iProf.q7}\n  //     </ClientResultBio>\n  //   ));\n  // };\n\n  // class Client extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"parallax-container\">\n          <Container>\n            <Row>\n              <Col size=\"12\">\n                <div className=\"white center\" id=\"search-heading\">\n                  <h5 className=\"center\" id=\"search-title\">\n                    <img src={headstand}> </img>\n                    CLIENT NAME: LOCATION: STUDIO:\n                  </h5>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col size=\"5\">\n                <div className=\"white center\" id=\"search-heading\">\n                  <h5 className=\"center\" id=\"search-title\">\n                    <img src=\"change to the example\"> </img>\n                    image\n                  </h5>\n                </div>\n              </Col>\n              <Col size=\"5\">\n                <div className=\"panel-body\">\n                  <ul className=\"list-group\">\n                    {this.renderclientProfContact()}\n                  </ul>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col size=\"12\">\n                <div className=\"panel-body\">\n                  <ul className=\"list-group\">{this.renderclientProfBio()}</ul>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n          <div className=\"parallax\">\n            <img\n              className=\"background-img\"\n              src={background}\n              alt=\"Unsplashed background img 1\"\n            />\n          </div>\n        </div>\n        <div className=\"section-white\">\n          <h2 className=\"center\">Namaste</h2>\n          <Row>\n            <div className=\"center\">\n              <Col size=\"3\" />\n            </div>\n            <div className=\"center\">\n              <Col size=\"6\">\n                <p>\n                  \"Yoga Is a light with once lit will never dim, the better your\n                  practice the brighter your flame.\"\n                </p>\n                <p>- B.K.S. Iyengar</p>\n              </Col>\n            </div>\n            <div className=\"center\">\n              <Col size=\"3\" />\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}