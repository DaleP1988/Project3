{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/Booking.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport InstructorCard from \"../components/InstructorCard\";\nimport { Card, Input, Icon, Button, Modal } from \"react-materialize\";\nimport background from \"../images/floor2.jpg\";\nimport InstructorSchedule from \"../components/InstructorSchedule\";\nimport API from \"../utils/API\";\nimport { PromiseProvider } from \"mongoose\";\n\nvar Booking =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Booking, _Component);\n\n  function Booking() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Booking);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Booking)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Instructor: \"Johnny Salke\",\n      Location: \"\",\n      City: \"\",\n      InstructorSchedules: [],\n      InstructorBio: [],\n      Day: \"\",\n      Time: \"\" // Modal: []\n\n    };\n\n    _this.getInstructorName = function (event) {\n      // save the data from the other page\n      _this.setState({\n        Instructor: event.target.value\n      });\n    };\n\n    _this.getInstructorLocation = function (event) {\n      // save the data from the other page\n      _this.setState({\n        Location: event.target.value\n      });\n    };\n\n    _this.handleSearchSubmit = function (event) {\n      event.preventDefault();\n      API.getClasses(_this.state.Instructor, _this.state.Location).then(function (res) {\n        console.log(\"got data \", res.data);\n\n        _this.setState({\n          InstructorSchedules: res.data\n        });\n      });\n    };\n\n    _this.fillAbbrevProfile = function () {\n      API.getIP(_this.state.name, _this.state.loc).then(function (res) {\n        _this.setState({\n          clients: res.data\n        });\n      });\n    };\n\n    _this.renderInstructorBio = function () {\n      return _this.state.InstructorSchedules.map(function (schedule) {\n        return React.createElement(InstructorCard, {\n          key: schedule.instructor,\n          name: schedule.instructor,\n          studio: schedule.studioName,\n          location: schedule.studioAddress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.handleDateChange = function (event) {\n      _this.setState({\n        Time: event.target.value\n      });\n    };\n\n    _this.handleTimeInput = function (event) {\n      _this.setState({\n        Day: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Booking, [{\n    key: \"componentDidMount\",\n    //when component mounts, get instructor from session storage, load to this.state.instructorSchedule\n    value: function componentDidMount() {} // this.getInstructorName();\n    // this.findSchedules();\n    ////////////////////\n    ////GET NAME///////\n    ////GET LOC////////\n    ///////////////////\n\n  }, {\n    key: \"render\",\n    //////////////////\n    ///MODAL BUILD///\n    /////////////////\n    //not sure if above will return the right result\n    // method for rendering the modal div\n    // may not need this method. can just do the\n    // renderModal = () => {\n    //   return this.state.Modal.map(schedule => (\n    //     <BookingResult>\n    //       -id={schedule._id}\n    //       key={schedule._id}\n    //       name = {Modal.name}\n    //       location = {Modal.location}\n    //       studio = {Modal.studio}\n    //       email = {Modal.email}\n    //       phone = {Modal.phone}\n    //     </BookingResult>\n    //   ));\n    // };\n    ///////////////////\n    ///FILL SCHEDULE//\n    //////////////////\n    //function to search with the name. for the axios call to MBO\n    // make sure it gets the right instructor\n    // findSchedule = () => {\n    //   API.getClasses(this.state.Instructor)\n    //     .then(res => {\n    //       var responseArray =\n    //         typeof res.data.response.docs !== \"undefined\"\n    //           ? res.data.response.docs\n    //           : [];\n    //       if (responseArray) {\n    //         classList = responseArray.Classes.class;\n    //       }\n    //       this.setState({ InstructorSchedules: classList });\n    //     })\n    //     .catch(err => console.log(err));\n    // };\n    //method for rendering one instructor schedule div\n    // renderInstructorSchedule = () => {\n    //   return this.state.InstructorSchedules.map(schedule => (\n    //     <InstructorSchedule>\n    //       -id={schedule._id}\n    //       key={schedule._id}\n    //       className = {schedule.classList.ClassDescription.SessionType.Name}\n    //       level = {schedule.classList.ClassDescription.Level.Name}\n    //       description = {schedule.classList.ClassDescription.Description}\n    //       location = {schedule.classList.Location.City}\n    //       date = {schedule.classList.StartDateTime}\n    //       time = {schedule.classList.StartDateTime}\n    //       studio = {schedule.classList.Location.City.Name}\n    //       spots = {schedule.classList.IsAvailable}\n    //       cancellation = {schedule.classList.IsCanceled}\n    //       registration ={\" \"}\n    //       {schedule.classList.ClassDescription.Program.ScheduleType}\n    //       address = {schedule.classList.Location.Address}\n    //     </InstructorSchedule>\n    //   ));\n    // };\n    value: function render(props) {\n      console.log(\"InstructorSchedules \", this.state.InstructorSchedules);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parallax-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        id: \"booking-section\",\n        className: \"white responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        id: \"search-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        id: \"search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"event\"), \"CLASS SCHEDULER\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        id: \"search-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        id: \"search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"FIND INSTRUCTOR\"), React.createElement(\"div\", {\n        className: \"input-field col m12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Name\",\n        id: \"name\",\n        type: \"text\",\n        class: \"name\",\n        onChange: this.getInstructorName,\n        value: this.state.Instructor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col m12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"City, State\",\n        id: \"location\",\n        type: \"text\",\n        class: \"location\",\n        onChange: this.getInstructorLocation,\n        value: this.Location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        className: \"waves-effect waves-light btn-small\",\n        onClick: this.handleSearchSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, this.renderInstructorBio()), React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Request an Introductory Session\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col m12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Date\",\n        id: \"datePick\",\n        type: \"text\",\n        class: \"datepicker\" // onChange={this.handleDateChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"datePick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Select a date\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col m12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Time\",\n        id: \"timePick\",\n        type: \"text\",\n        class: \"timepicker\" // onChange={props.handleTimeInput}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"timePick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Select a time\"))), React.createElement(Modal, {\n        header: \"Thanks for booking!\",\n        className: \" waves-effect waves-light\",\n        trigger: React.createElement(Button, {\n          className: \"waves-effect waves-light btn-small\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, \"Submit\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"parallax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"background-img\",\n        src: background,\n        alt: \"Unsplashed background img 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"section-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"RESULTS\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {},\n        className: \"\",\n        id: \"booking-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Booking;\n}(Component);\n\nexport default Booking;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/Booking.js"],"names":["React","Component","Col","Row","Container","InstructorCard","Card","Input","Icon","Button","Modal","background","InstructorSchedule","API","PromiseProvider","Booking","state","Instructor","Location","City","InstructorSchedules","InstructorBio","Day","Time","getInstructorName","event","setState","target","value","getInstructorLocation","handleSearchSubmit","preventDefault","getClasses","then","res","console","log","data","fillAbbrevProfile","getIP","name","loc","clients","renderInstructorBio","map","schedule","instructor","studioName","studioAddress","handleDateChange","handleTimeInput","props","marginTop","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport InstructorCard from \"../components/InstructorCard\";\nimport { Card, Input, Icon, Button, Modal } from \"react-materialize\";\nimport background from \"../images/floor2.jpg\";\nimport InstructorSchedule from \"../components/InstructorSchedule\";\nimport API from \"../utils/API\";\nimport { PromiseProvider } from \"mongoose\";\n\nclass Booking extends Component {\n  state = {\n    Instructor: \"Johnny Salke\",\n    Location: \"\",\n    City: \"\",\n    InstructorSchedules: [],\n    InstructorBio: [],\n    Day: \"\",\n    Time: \"\"\n    // Modal: []\n  };\n\n  //when component mounts, get instructor from session storage, load to this.state.instructorSchedule\n\n  componentDidMount() {\n    // this.getInstructorName();\n    // this.findSchedules();\n  }\n\n  ////////////////////\n  ////GET NAME///////\n  ////GET LOC////////\n  ///////////////////\n\n  getInstructorName = event => {\n    // save the data from the other page\n    this.setState({ Instructor: event.target.value });\n  };\n\n  getInstructorLocation = event => {\n    // save the data from the other page\n    this.setState({ Location: event.target.value });\n  };\n\n  ////////////////////\n  ////AJAX CALL//////\n  ////MBO////////////\n  ///////////////////\n\n  handleSearchSubmit = event => {\n    event.preventDefault();\n    API.getClasses(this.state.Instructor, this.state.Location).then(res => {\n      console.log(\"got data \", res.data);\n      this.setState({ InstructorSchedules: res.data });\n    });\n  };\n\n  /////////////////////\n  ///abbrv profile/////\n  /////////////////////\n\n  //function to get the instructor name from session storage\n\n  // funciton to get the profile data into card\n\n  fillAbbrevProfile = () => {\n    API.getIP(this.state.name, this.state.loc).then(res => {\n      this.setState({ clients: res.data });\n    });\n  };\n\n  // method to create a single card div\n  // instructor card\n\n  renderInstructorBio = () => {\n    return this.state.InstructorSchedules.map(schedule => (\n      <InstructorCard\n        key={schedule.instructor}\n        name={schedule.instructor}\n        studio={schedule.studioName}\n        location={schedule.studioAddress}\n      />\n    ));\n  };\n\n  //////////////////\n  //BOOKING INPUT///\n  //////////////////\n\n  //method for getting the date input\n\n  handleDateChange = event => {\n    this.setState({ Time: event.target.value });\n  };\n\n  //method for getting the time input\n\n  handleTimeInput = event => {\n    this.setState({ Day: event.target.value });\n  };\n\n  //////////////////\n  ///MODAL BUILD///\n  /////////////////\n\n  //not sure if above will return the right result\n\n  // method for rendering the modal div\n  // may not need this method. can just do the\n\n  // renderModal = () => {\n  //   return this.state.Modal.map(schedule => (\n  //     <BookingResult>\n  //       -id={schedule._id}\n  //       key={schedule._id}\n  //       name = {Modal.name}\n  //       location = {Modal.location}\n  //       studio = {Modal.studio}\n  //       email = {Modal.email}\n  //       phone = {Modal.phone}\n  //     </BookingResult>\n  //   ));\n  // };\n\n  ///////////////////\n  ///FILL SCHEDULE//\n  //////////////////\n\n  //function to search with the name. for the axios call to MBO\n  // make sure it gets the right instructor\n\n  // findSchedule = () => {\n  //   API.getClasses(this.state.Instructor)\n  //     .then(res => {\n  //       var responseArray =\n  //         typeof res.data.response.docs !== \"undefined\"\n  //           ? res.data.response.docs\n  //           : [];\n  //       if (responseArray) {\n  //         classList = responseArray.Classes.class;\n  //       }\n  //       this.setState({ InstructorSchedules: classList });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  //method for rendering one instructor schedule div\n\n  // renderInstructorSchedule = () => {\n  //   return this.state.InstructorSchedules.map(schedule => (\n  //     <InstructorSchedule>\n  //       -id={schedule._id}\n  //       key={schedule._id}\n  //       className = {schedule.classList.ClassDescription.SessionType.Name}\n  //       level = {schedule.classList.ClassDescription.Level.Name}\n  //       description = {schedule.classList.ClassDescription.Description}\n  //       location = {schedule.classList.Location.City}\n  //       date = {schedule.classList.StartDateTime}\n  //       time = {schedule.classList.StartDateTime}\n  //       studio = {schedule.classList.Location.City.Name}\n  //       spots = {schedule.classList.IsAvailable}\n  //       cancellation = {schedule.classList.IsCanceled}\n  //       registration ={\" \"}\n  //       {schedule.classList.ClassDescription.Program.ScheduleType}\n  //       address = {schedule.classList.Location.Address}\n  //     </InstructorSchedule>\n  //   ));\n  // };\n\n  render(props) {\n    console.log(\"InstructorSchedules \", this.state.InstructorSchedules);\n    return (\n      <div>\n        <div className=\"parallax-container\">\n          <Container>\n            <div\n              style={{ marginTop: \"20px\" }}\n              id=\"booking-section\"\n              className=\"white responsive\"\n            >\n              <Row>\n                <div className=\"center\" id=\"search-heading\">\n                  <h2 className=\"center\" id=\"search-title\">\n                    <Icon className=\"medium\">event</Icon>\n                    CLASS SCHEDULER\n                  </h2>\n                </div>\n              </Row>\n              <Row>\n                <div className=\"center\" id=\"search-heading\">\n                  <h2 className=\"center\" id=\"search-title\">\n                    {/* <Icon className=\"medium\">event</Icon> */}\n                    FIND INSTRUCTOR\n                  </h2>\n                  <div className=\"input-field col m12\">\n                    <input\n                      placeholder=\"Name\"\n                      id=\"name\"\n                      type=\"text\"\n                      class=\"name\"\n                      onChange={this.getInstructorName}\n                      value={this.state.Instructor}\n                    />\n                  </div>\n                  <div className=\"input-field col m12\">\n                    <input\n                      placeholder=\"City, State\"\n                      id=\"location\"\n                      type=\"text\"\n                      class=\"location\"\n                      onChange={this.getInstructorLocation}\n                      value={this.Location}\n                    />\n                  </div>\n                  <a\n                    className=\"waves-effect waves-light btn-small\"\n                    onClick={this.handleSearchSubmit}\n                  >\n                    Submit\n                  </a>\n                </div>\n              </Row>\n\n              <Row>\n                <Col size=\"6\">{this.renderInstructorBio()}</Col>\n                <Col size=\"6\">\n                  <Card title=\"Request an Introductory Session\">\n                    <Row>\n                      <div className=\"input-field col m12\">\n                        <input\n                          placeholder=\"Date\"\n                          id=\"datePick\"\n                          type=\"text\"\n                          class=\"datepicker\"\n                          // onChange={this.handleDateChange}\n                        />\n                        <label for=\"datePick\">Select a date</label>\n                      </div>\n                    </Row>\n                    <Row>\n                      <div className=\"input-field col m12\">\n                        <input\n                          placeholder=\"Time\"\n                          id=\"timePick\"\n                          type=\"text\"\n                          class=\"timepicker\"\n                          // onChange={props.handleTimeInput}\n                        />\n                        <label for=\"timePick\">Select a time</label>\n                      </div>\n                    </Row>\n                    <Modal\n                      header=\"Thanks for booking!\"\n                      className=\" waves-effect waves-light\"\n                      trigger={\n                        <Button\n                          className=\"waves-effect waves-light btn-small\"\n                          type=\"submit\"\n                        >\n                          Submit\n                        </Button>\n                      }\n                    >\n                      {/* <p>\n                        Your request for a session on {props.Day} at{\" \"}\n                        {props.Time} has been submitted. {props.Instructor} will\n                        contact you directly.\n                      </p> */}\n                    </Modal>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"parallax\">\n            <img\n              className=\"background-img\"\n              src={background}\n              alt=\"Unsplashed background img 1\"\n            />\n          </div>\n        </div>\n        <div className=\"section-white\">\n          <Container style={{ height: \"400px\" }}>\n            <h2 className=\"center\">RESULTS</h2>\n            <Row>\n              <Col size=\"12\">\n                <div style={{}} className=\"\" id=\"booking-results\">\n                  {/* {this.renderInstructorSchedule()} */}\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Booking;\n"]},"metadata":{},"sourceType":"module"}