{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport React from \"react\"; // import API from \"\";\n\nvar InstructorProfileForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorProfileForm, _React$Component);\n\n  function InstructorProfileForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InstructorProfileForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InstructorProfileForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.json = {\n      title: \"Yoga Instructor Profile\",\n      pages: [{\n        name: \"\",\n        elements: [{\n          type: \"multipletext\",\n          name: \"Contact\",\n          title: \"Contact\",\n          items: [{\n            name: \"Firstname\"\n          }, {\n            name: \"Lastname\"\n          }, {\n            name: \"Email\"\n          }, {\n            name: \"Phone\"\n          }, {\n            name: \"Location\",\n            placeholder: \"City, State\"\n          }],\n          itemSize: 16,\n          colCount: 3\n        }, {\n          type: \"file\",\n          name: \"Photo\",\n          title: \"Photo\",\n          imageHeight: \"200px\",\n          imageWidth: \"300px\",\n          maxSize: 0\n        }, {\n          type: \"checkbox\",\n          name: \"question1\",\n          title: \"Select the words that best describe your teaching style (please check all that apply) \",\n          choices: [{\n            value: \"item1\",\n            text: \"Beginner\"\n          }, {\n            value: \"item2\",\n            text: \"Intermediate\"\n          }, {\n            value: \"item3\",\n            text: \"Advanced\"\n          }, {\n            value: \"item4\",\n            text: \"Hot\"\n          }, {\n            value: \"item5\",\n            text: \"Core Focused\"\n          }, {\n            value: \"item6\",\n            text: \"Cardiovascular\"\n          }],\n          colCount: 3\n        }, {\n          type: \"comment\",\n          name: \"question2\",\n          title: \"Instructor Bio: Tell us about yourself \"\n        }, {\n          type: \"comment\",\n          name: \"question3\",\n          title: \"Instructor Bio: Tell us about your teaching background\"\n        }, {\n          type: \"comment\",\n          name: \"question4\",\n          title: \"Instructor Bio: Tell us about a transformative teaching experience\"\n        }, {\n          type: \"comment\",\n          name: \"question5\",\n          title: \"Instructor Message to Clients: Tell us what you love most about teaching.\"\n        }, {\n          type: \"comment\",\n          name: \"question6\",\n          title: \"Instructor Message to Clients: What words of wisdom and encouragement do you have to offer clients?\"\n        }, {\n          type: \"text\",\n          name: \"Goodie\",\n          title: \"Show us your favorite yoga goodie! (Paste URL)\"\n        }]\n      }],\n      sendResultOnPageNext: true\n    };\n\n    _this.onComplete = function (survey, options) {\n      //Write survey results into database\n      var DTO = createDTO(survey);\n      axios.post(\"api/instructorProfile\", DTO).then(function (data) {\n        alert(\"\");\n        console.log(data);\n\n        createDTO = function createDTO(survey) {\n          var values = survey.ValuesHash;\n          var dto = {\n            Firstname: values.Contact.Firstname,\n            Lastname: values.Contact.Lastname,\n            email: values.Email,\n            phone: values.Phone,\n            loc: values.Location,\n            img: values.Photo.content,\n            q1: values.question1,\n            q2: values.question2,\n            q3: values.question3,\n            q4: values.question4,\n            q5: values.question5,\n            q6: values.question6,\n            q7: values.Goodie\n          };\n          return dto;\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  return InstructorProfileForm;\n}(React.Component); //Define a callback methods on survey complete\n// function finale(){\n//   //Write survey results into database\n//   console.log(\"Survey results: \" + JSON.stringify(survey.data));\n//   render() {\n//     //Create the model and pass it into react Survey component\n//     //You may create survey model outside the render function and use it in your App or component\n//     //The most model properties are reactive, on their change the component will change UI when needed.\n//     var model = new Survey.Model(this.json);\n//     return <Survey.Survey model={model} onComplete={this.onComplete} />;\n//     /*\n//   //The alternative way. react Survey component will create survey model internally\n//   return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n//   */\n//     //You may pass model properties directly into component or set it into model\n//     // <Survey.Survey model={model} mode=\"display\"/>\n//     //or\n//     // model.mode=\"display\"\n//     // <Survey.Survey model={model}/>\n//     // You may change model properties outside render function.\n//     //If needed react Survey Component will change its behavior and change UI.\n//   };\n// };\n\n\nexport default InstructorProfileForm;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/components/InstructorProfileForm/InstructorProfileForm.js"],"names":["Survey","React","InstructorProfileForm","json","title","pages","name","elements","type","items","placeholder","itemSize","colCount","imageHeight","imageWidth","maxSize","choices","value","text","sendResultOnPageNext","onComplete","survey","options","DTO","createDTO","axios","post","then","data","alert","console","log","values","ValuesHash","dto","Firstname","Contact","Lastname","email","Email","phone","Phone","loc","Location","img","Photo","content","q1","question1","q2","question2","q3","question3","q4","question4","q5","question5","q6","question6","q7","Goodie","Component"],"mappings":"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","sourcesContent":["import * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport React from \"react\";\n// import API from \"\";\n\nclass InstructorProfileForm extends React.Component {\n  json = {\n    title: \"Yoga Instructor Profile\",\n    pages: [\n      {\n        name: \"\",\n        elements: [\n          {\n            type: \"multipletext\",\n            name: \"Contact\",\n            title: \"Contact\",\n            items: [\n              { name: \"Firstname\" },\n              { name: \"Lastname\" },\n              { name: \"Email\" },\n              { name: \"Phone\" },\n              { name: \"Location\", placeholder: \"City, State\" }\n            ],\n            itemSize: 16,\n            colCount: 3\n          },\n          {\n            type: \"file\",\n            name: \"Photo\",\n            title: \"Photo\",\n            imageHeight: \"200px\",\n            imageWidth: \"300px\",\n            maxSize: 0\n          },\n          {\n            type: \"checkbox\",\n            name: \"question1\",\n            title:\n              \"Select the words that best describe your teaching style (please check all that apply) \",\n            choices: [\n              { value: \"item1\", text: \"Beginner\" },\n              { value: \"item2\", text: \"Intermediate\" },\n              { value: \"item3\", text: \"Advanced\" },\n              { value: \"item4\", text: \"Hot\" },\n              { value: \"item5\", text: \"Core Focused\" },\n              { value: \"item6\", text: \"Cardiovascular\" }\n            ],\n            colCount: 3\n          },\n          {\n            type: \"comment\",\n            name: \"question2\",\n            title: \"Instructor Bio: Tell us about yourself \"\n          },\n          {\n            type: \"comment\",\n            name: \"question3\",\n            title: \"Instructor Bio: Tell us about your teaching background\"\n          },\n          {\n            type: \"comment\",\n            name: \"question4\",\n            title:\n              \"Instructor Bio: Tell us about a transformative teaching experience\"\n          },\n          {\n            type: \"comment\",\n            name: \"question5\",\n            title:\n              \"Instructor Message to Clients: Tell us what you love most about teaching.\"\n          },\n          {\n            type: \"comment\",\n            name: \"question6\",\n            title:\n              \"Instructor Message to Clients: What words of wisdom and encouragement do you have to offer clients?\"\n          },\n          {\n            type: \"text\",\n            name: \"Goodie\",\n            title: \"Show us your favorite yoga goodie! (Paste URL)\"\n          }\n        ]\n      }\n    ],\n    sendResultOnPageNext: true\n  };\n\n  onComplete = (survey, options) => {\n    //Write survey results into database\n    var DTO = createDTO(survey);\n\n    axios.post(\"api/instructorProfile\", DTO).then(function(data) {\n      alert(\"\");\n      console.log(data);\n\n      createDTO = survey => {\n        var values = survey.ValuesHash;\n        var dto = {\n          Firstname: values.Contact.Firstname,\n          Lastname: values.Contact.Lastname,\n          email: values.Email,\n          phone: values.Phone,\n          loc: values.Location,\n          img: values.Photo.content,\n          q1: values.question1,\n          q2: values.question2,\n          q3: values.question3,\n          q4: values.question4,\n          q5: values.question5,\n          q6: values.question6,\n          q7: values.Goodie\n        };\n\n        return dto;\n      };\n    });\n  };\n}\n\n//Define a callback methods on survey complete\n\n// function finale(){\n\n//   //Write survey results into database\n//   console.log(\"Survey results: \" + JSON.stringify(survey.data));\n\n//   render() {\n//     //Create the model and pass it into react Survey component\n//     //You may create survey model outside the render function and use it in your App or component\n//     //The most model properties are reactive, on their change the component will change UI when needed.\n\n//     var model = new Survey.Model(this.json);\n//     return <Survey.Survey model={model} onComplete={this.onComplete} />;\n//     /*\n//   //The alternative way. react Survey component will create survey model internally\n//   return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n//   */\n//     //You may pass model properties directly into component or set it into model\n//     // <Survey.Survey model={model} mode=\"display\"/>\n//     //or\n//     // model.mode=\"display\"\n//     // <Survey.Survey model={model}/>\n//     // You may change model properties outside render function.\n//     //If needed react Survey Component will change its behavior and change UI.\n\n//   };\n// };\n\nexport default InstructorProfileForm;\n"]},"metadata":{},"sourceType":"module"}