{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/components/ClientProfileForm/ClientProfileForm.js\";\nimport React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\"; // import API from \"../../\";\n// import $ from \"jquery\";\n\nvar ClientProfileForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClientProfileForm, _React$Component);\n\n  function ClientProfileForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClientProfileForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClientProfileForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.json = {\n      title: \"Yoga Client Profile\",\n      pages: [{\n        name: \"Yoga Client Profile\",\n        elements: [{\n          type: \"multipletext\",\n          name: \"Contact\",\n          title: \"Contact\",\n          items: [{\n            name: \"Firstname\"\n          }, {\n            name: \"Lastname\"\n          }, {\n            name: \"Email\"\n          }, {\n            name: \"Phone\"\n          }, {\n            name: \"Location\",\n            placeholder: \"(city, state)\"\n          }],\n          itemSize: 16,\n          colCount: 2\n        }, {\n          type: \"file\",\n          name: \"Photo\",\n          imageHeight: \"200px\",\n          imageWidth: \"300px\",\n          maxSize: 0\n        }, {\n          type: \"checkbox\",\n          name: \"question1\",\n          title: \"Select the words that best describe your ideal yoga practice (please check all that apply) \",\n          choices: [{\n            value: \"item1\",\n            text: \"Beginner\"\n          }, {\n            value: \"item2\",\n            text: \"Intermediate\"\n          }, {\n            value: \"item3\",\n            text: \"Advanced\"\n          }, {\n            value: \"item4\",\n            text: \"Hot\"\n          }, {\n            value: \"item5\",\n            text: \"Core Focused\"\n          }, {\n            value: \"item6\",\n            text: \"Cardiovascular\"\n          }],\n          colCount: 3\n        }, {\n          type: \"checkbox\",\n          name: \"question2\",\n          title: \"Select the word(s) that best describe the challenges you are facing in your practice.\",\n          choices: [{\n            value: \"item1\",\n            text: \"Too Advanced\"\n          }, {\n            value: \"item2\",\n            text: \"Too Basic\"\n          }, {\n            value: \"item3\",\n            text: \"Don't like the studio\"\n          }, {\n            value: \"item4\",\n            text: \"Injury\"\n          }, {\n            value: \"item5\",\n            text: \"Illness\"\n          }, {\n            value: \"item6\",\n            text: \"Anxiety\"\n          }, {\n            value: \"item7\",\n            text: \"Can't find the right teacher\"\n          }],\n          colCount: 3\n        }, {\n          type: \"comment\",\n          name: \"question3\",\n          title: \"Please describe your ideal yoga practice environment\"\n        }, {\n          type: \"comment\",\n          name: \"question4\",\n          title: \"Tell us more about your yoga journey....\"\n        }],\n        title: \"Yoga Client Profile\"\n      }]\n    };\n\n    _this.createDTO = function (survey) {\n      var dto = {\n        Firstname: survey.Contact.Firstname,\n        Lastname: survey.Contact.Lastname,\n        email: survey.Contact.Email,\n        phone: survey.Contact.Phone,\n        locState: survey.Location,\n        img: survey.Photo.content,\n        q1: survey.question1,\n        q2: survey.question2,\n        q3: survey.question3,\n        q4: survey.question4\n      };\n      return dto;\n    };\n\n    return _this;\n  }\n\n  _createClass(ClientProfileForm, [{\n    key: \"onComplete\",\n    //Define a callback methods on survey complete\n    value: function onComplete(survey, options) {\n      //Write survey results into database\n      console.log(\"Survey results: \" + JSON.stringify(survey.data)); //API.saveSurvey function will be called here.....\n      //function defined in API.js\n      //(see saved book)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //Create the model and pass it into react Survey component\n      //You may create survey model outside the render function and use it in your App or component\n      //The most model properties are reactive, on their change the component will change UI when needed.\n      var model = new Survey.Model(this.json);\n      return React.createElement(Survey.Survey, {\n        model: model,\n        onComplete: this.onComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n      /*\n      //The alternative way. react Survey component will create survey model internally\n      return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n      */\n      //You may pass model properties directly into component or set it into model\n      // <Survey.Survey model={model} mode=\"display\"/>\n      //or\n      // model.mode=\"display\"\n      // <Survey.Survey model={model}/>\n      // You may change model properties outside render function.\n      //If needed react Survey Component will change its behavior and change UI.\n    }\n  }]);\n\n  return ClientProfileForm;\n}(React.Component);\n\nexport { ClientProfileForm as default };","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/components/ClientProfileForm/ClientProfileForm.js"],"names":["React","Survey","ClientProfileForm","json","title","pages","name","elements","type","items","placeholder","itemSize","colCount","imageHeight","imageWidth","maxSize","choices","value","text","createDTO","survey","dto","Firstname","Contact","Lastname","email","Email","phone","Phone","locState","Location","img","Photo","content","q1","question1","q2","question2","q3","question3","q4","question4","options","console","log","JSON","stringify","data","model","Model","onComplete","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\n// import API from \"../../\";\n// import $ from \"jquery\";\n\nexport default class ClientProfileForm extends React.Component {\n  json = {\n    title: \"Yoga Client Profile\",\n    pages: [\n      {\n        name: \"Yoga Client Profile\",\n        elements: [\n          {\n            type: \"multipletext\",\n            name: \"Contact\",\n            title: \"Contact\",\n            items: [\n              { name: \"Firstname\" },\n              { name: \"Lastname\" },\n              { name: \"Email\" },\n              { name: \"Phone\" },\n              { name: \"Location\", placeholder: \"(city, state)\" }\n            ],\n            itemSize: 16,\n            colCount: 2\n          },\n          {\n            type: \"file\",\n            name: \"Photo\",\n            imageHeight: \"200px\",\n            imageWidth: \"300px\",\n            maxSize: 0\n          },\n          {\n            type: \"checkbox\",\n            name: \"question1\",\n            title:\n              \"Select the words that best describe your ideal yoga practice (please check all that apply) \",\n            choices: [\n              { value: \"item1\", text: \"Beginner\" },\n              { value: \"item2\", text: \"Intermediate\" },\n              { value: \"item3\", text: \"Advanced\" },\n              { value: \"item4\", text: \"Hot\" },\n              { value: \"item5\", text: \"Core Focused\" },\n              { value: \"item6\", text: \"Cardiovascular\" }\n            ],\n            colCount: 3\n          },\n          {\n            type: \"checkbox\",\n            name: \"question2\",\n            title:\n              \"Select the word(s) that best describe the challenges you are facing in your practice.\",\n            choices: [\n              { value: \"item1\", text: \"Too Advanced\" },\n              { value: \"item2\", text: \"Too Basic\" },\n              { value: \"item3\", text: \"Don't like the studio\" },\n              { value: \"item4\", text: \"Injury\" },\n              { value: \"item5\", text: \"Illness\" },\n              { value: \"item6\", text: \"Anxiety\" },\n              { value: \"item7\", text: \"Can't find the right teacher\" }\n            ],\n            colCount: 3\n          },\n          {\n            type: \"comment\",\n            name: \"question3\",\n            title: \"Please describe your ideal yoga practice environment\"\n          },\n          {\n            type: \"comment\",\n            name: \"question4\",\n            title: \"Tell us more about your yoga journey....\"\n          }\n        ],\n        title: \"Yoga Client Profile\"\n      }\n    ]\n  };\n\n  createDTO = survey => {\n    var dto = {\n      Firstname: survey.Contact.Firstname,\n      Lastname: survey.Contact.Lastname,\n      email: survey.Contact.Email,\n      phone: survey.Contact.Phone,\n      locState: survey.Location,\n      img: survey.Photo.content,\n      q1: survey.question1,\n      q2: survey.question2,\n      q3: survey.question3,\n      q4: survey.question4\n    };\n\n    return dto;\n  };\n\n  //Define a callback methods on survey complete\n  onComplete(survey, options) {\n    //Write survey results into database\n    console.log(\"Survey results: \" + JSON.stringify(survey.data));\n\n    //API.saveSurvey function will be called here.....\n    //function defined in API.js\n    //(see saved book)\n  }\n\n  render() {\n    //Create the model and pass it into react Survey component\n    //You may create survey model outside the render function and use it in your App or component\n    //The most model properties are reactive, on their change the component will change UI when needed.\n\n    var model = new Survey.Model(this.json);\n    return <Survey.Survey model={model} onComplete={this.onComplete} />;\n    /*\n  //The alternative way. react Survey component will create survey model internally\n  return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n  */\n    //You may pass model properties directly into component or set it into model\n    // <Survey.Survey model={model} mode=\"display\"/>\n    //or\n    // model.mode=\"display\"\n    // <Survey.Survey model={model}/>\n    // You may change model properties outside render function.\n    //If needed react Survey Component will change its behavior and change UI.\n  }\n}\n"]},"metadata":{},"sourceType":"module"}