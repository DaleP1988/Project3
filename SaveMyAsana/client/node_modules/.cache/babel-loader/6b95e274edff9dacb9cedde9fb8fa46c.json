{"ast":null,"code":"\"use strict\";\n\nvar crypto = require('crypto');\n\nexports.passwordDigest = function passwordDigest(nonce, created, password) {\n  // digest = base64 ( sha1 ( nonce + created + password ) )\n  var pwHash = crypto.createHash('sha1');\n  var rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\n  pwHash.update(rawNonce + created + password);\n  return pwHash.digest('base64');\n};\n\nvar TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\nexports.TNS_PREFIX = TNS_PREFIX;\n/**\r\n * Find a key from an object based on the value\r\n * @param {Object} Namespace prefix/uri mapping\r\n * @param {*} nsURI value\r\n * @returns {String} The matching key\r\n */\n\nexports.findPrefix = function (xmlnsMapping, nsURI) {\n  for (var n in xmlnsMapping) {\n    if (n === TNS_PREFIX) continue;\n\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}