{"ast":null,"code":"/*\r\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\r\n * MIT Licensed\r\n */\n\"use strict\";\n\nvar Client = require('./client').Client,\n    Server = require('./server').Server,\n    HttpClient = require('./http'),\n    security = require('./security'),\n    passwordDigest = require('./utils').passwordDigest,\n    BluebirdPromise = require('bluebird'),\n    wsdl = require('./wsdl'),\n    WSDL = require('./wsdl').WSDL;\n\nfunction createCache() {\n  var cache = {};\n  return function (key, load, callback) {\n    if (!cache[key]) {\n      load(function (err, result) {\n        if (err) {\n          return callback(err);\n        }\n\n        cache[key] = result;\n        callback(null, result);\n      });\n    } else {\n      process.nextTick(function () {\n        callback(null, cache[key]);\n      });\n    }\n  };\n}\n\nvar getFromCache = createCache();\n\nfunction _requestWSDL(url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var openWsdl = wsdl.open_wsdl.bind(null, url, options);\n\n  if (options.disableCache === true) {\n    openWsdl(callback);\n  } else {\n    getFromCache(url, openWsdl, callback);\n  }\n}\n\nfunction createClient(url, options, callback, endpoint) {\n  if (typeof options === 'function') {\n    endpoint = callback;\n    callback = options;\n    options = {};\n  }\n\n  endpoint = options.endpoint || endpoint;\n\n  _requestWSDL(url, options, function (err, wsdl) {\n    callback(err, wsdl && new Client(wsdl, endpoint, options));\n  });\n}\n\nfunction createClientAsync(url, options, endpoint) {\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n\n  return new BluebirdPromise(function (resolve, reject) {\n    createClient(url, options, function (err, client) {\n      if (err) {\n        reject(err);\n      }\n\n      resolve(client);\n    }, endpoint);\n  });\n}\n\nfunction listen(server, pathOrOptions, services, xml) {\n  var options = {},\n      path = pathOrOptions,\n      uri = \"\";\n\n  if (typeof pathOrOptions === 'object') {\n    options = pathOrOptions;\n    path = options.path;\n    services = options.services;\n    xml = options.xml;\n    uri = options.uri;\n  }\n\n  var wsdl = new WSDL(xml || services, uri, options);\n  return new Server(server, path, services, wsdl, options);\n}\n\nexports.security = security;\nexports.BasicAuthSecurity = security.BasicAuthSecurity;\nexports.NTLMSecurity = security.NTLMSecurity;\nexports.WSSecurity = security.WSSecurity;\nexports.WSSecurityCert = security.WSSecurityCert;\nexports.ClientSSLSecurity = security.ClientSSLSecurity;\nexports.ClientSSLSecurityPFX = security.ClientSSLSecurityPFX;\nexports.BearerSecurity = security.BearerSecurity;\nexports.createClient = createClient;\nexports.createClientAsync = createClientAsync;\nexports.passwordDigest = passwordDigest;\nexports.listen = listen;\nexports.WSDL = WSDL; // Export Client and Server to allow customization\n\nexports.Server = Server;\nexports.Client = Client;\nexports.HttpClient = HttpClient;","map":null,"metadata":{},"sourceType":"script"}