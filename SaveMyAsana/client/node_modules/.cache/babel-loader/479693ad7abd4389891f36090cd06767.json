{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/components/InstructorSurveyForm/InstructorSurveyForm.js\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport React from \"react\"; // import API from \"\";\n// import $ from \"jquery\";\n\nvar InstructorSurveyForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorSurveyForm, _React$Component);\n\n  function InstructorSurveyForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InstructorSurveyForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InstructorSurveyForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.json = {\n      title: \"Yoga Instructor Survey\",\n      pages: [{\n        name: \"\",\n        elements: [{\n          type: \"multipletext\",\n          name: \"Contact\",\n          title: \"Contact\",\n          items: [{\n            name: \"Firstname\",\n            placeholder: \"First name\"\n          }, {\n            name: \"Lastname\",\n            placeholder: \"Last name\"\n          }, {\n            name: \"Studio\"\n          }, {\n            name: \"City\"\n          }, {\n            name: \"Location\"\n          }],\n          colCount: 2\n        }, {\n          type: \"checkbox\",\n          name: \"question1\",\n          title: \"How long have you been teaching yoga?\",\n          isRequired: true,\n          choices: [{\n            value: \"item1\",\n            text: \"0 -1 year\"\n          }, {\n            value: \"item2\",\n            text: \"1-5 years\"\n          }, {\n            value: \"item3\",\n            text: \"5-10 years\"\n          }, {\n            value: \"item4\",\n            text: \"10+ years\"\n          }],\n          colCount: 4\n        }, {\n          type: \"checkbox\",\n          name: \"question2\",\n          title: \"What levels do you teach? (please check all that apply)\",\n          choices: [{\n            value: \"item1\",\n            text: \"Introductory\"\n          }, {\n            value: \"item2\",\n            text: \"Beginner\"\n          }, {\n            value: \"item3\",\n            text: \"Intermediate\"\n          }, {\n            value: \"item4\",\n            text: \"Advanced\"\n          }, {\n            value: \"item5\",\n            text: \"Specialty\"\n          }, {\n            value: \"item6\",\n            text: \"Rehabilitative\"\n          }],\n          colCount: 4\n        }, {\n          type: \"checkbox\",\n          name: \"question3\",\n          title: \"What styles do you teach? (please check all that apply)\",\n          choices: [{\n            value: \"item1\",\n            text: \"Vinyasa Flow\"\n          }, {\n            value: \"item2\",\n            text: \"Hatha\"\n          }, {\n            value: \"item3\",\n            text: \"Iyengar\"\n          }, {\n            value: \"item4\",\n            text: \"Viniyoga\"\n          }, {\n            value: \"item5\",\n            text: \"Core Yoga\"\n          }, {\n            value: \"item6\",\n            text: \"Yoga Sculpt\"\n          }, {\n            value: \"item7\",\n            text: \"Restorative\"\n          }, {\n            value: \"item8\",\n            text: \"Bikram\"\n          }],\n          colCount: 4\n        }, {\n          type: \"checkbox\",\n          name: \"question4\",\n          title: \"What special populations have you worked with (either privately or in group settings)?\",\n          choices: [{\n            value: \"item1\",\n            text: \"Youth (5 - 12)\"\n          }, {\n            value: \"item2\",\n            text: \"Teens (13 - 19)\"\n          }, {\n            value: \"item3\",\n            text: \"Elite Athletes\"\n          }, {\n            value: \"item4\",\n            text: \"Dancers\"\n          }, {\n            value: \"item5\",\n            text: \"Injury: feet\"\n          }, {\n            value: \"item6\",\n            text: \"Injury: ankle\"\n          }, {\n            value: \"item7\",\n            text: \"Injury: knee\"\n          }, {\n            value: \"item8\",\n            text: \"Injury: spinal\"\n          }, {\n            value: \"item9\",\n            text: \"Injury: shoulder\"\n          }, {\n            value: \"item10\",\n            text: \"Injury: wrist\"\n          }, {\n            value: \"item11\",\n            text: \"condition: bone\"\n          }, {\n            value: \"item12\",\n            text: \"condition: arthritis\"\n          }, {\n            value: \"item13\",\n            text: \"condition: inflammatory\"\n          }, {\n            value: \"item14\",\n            text: \"condition: anxiety\"\n          }, {\n            value: \"item15\",\n            text: \"condition: heart\"\n          }, {\n            value: \"item16\",\n            text: \"illness: cancer\"\n          }, {\n            value: \"item17\",\n            text: \"Pre-Natal\"\n          }, {\n            value: \"item18\",\n            text: \"Post - Natal\"\n          }],\n          colCount: 3\n        }, {\n          type: \"checkbox\",\n          name: \"question5\",\n          title: \"What specialty training or certifications do you have? (please check all that apply)\",\n          choices: [{\n            value: \"item1\",\n            text: \"Yoga for Kids\"\n          }, {\n            value: \"item2\",\n            text: \"Yoga for Teens\"\n          }, {\n            value: \"item3\",\n            text: \"Yoga for Elite Athletes\"\n          }, {\n            value: \"item4\",\n            text: \"Yoga for Dancers\"\n          }, {\n            value: \"item5\",\n            text: \"Pre-Natal Yoga\"\n          }, {\n            value: \"item6\",\n            text: \"Post-Natal Yoga\"\n          }, {\n            value: \"item7\",\n            text: \"Yoga for Spine Health\"\n          }, {\n            value: \"item8\",\n            text: \"Restorative Yoga\"\n          }, {\n            value: \"item9\",\n            text: \"Core Yoga\"\n          }, {\n            value: \"item10\",\n            text: \"Geriatric Yoga\"\n          }, {\n            value: \"item11\",\n            text: \"Yoga for Rehabilitation\"\n          }, {\n            value: \"item12\",\n            text: \"Yoga for 12 Step Recovery\"\n          }, {\n            value: \"item13\",\n            text: \"Yoga for Inflammatory Conditions\"\n          }, {\n            value: \"item14\",\n            text: \"Yoga for Healing from Trauma\"\n          }],\n          colCount: 2\n        }, {\n          type: \"checkbox\",\n          name: \"question6\",\n          title: \"What advanced training (academic or professional) do you have? (please check all that apply)\",\n          choices: [{\n            value: \"item1\",\n            text: \"Licensed Physical Therapist\"\n          }, {\n            value: \"item2\",\n            text: \"Licensed Manual Therapist\"\n          }, {\n            value: \"item3\",\n            text: \"None\"\n          }, {\n            value: \"item4\",\n            text: \"Psychology\"\n          }, {\n            value: \"item5\",\n            text: \"Cranio Sacral Therapist\"\n          }, {\n            value: \"item6\",\n            text: \"Doctor (General Practitioner)\"\n          }, {\n            value: \"item7\",\n            text: \"Doctor (Other Specialty)\"\n          }, {\n            value: \"item8\",\n            text: \"Phd\"\n          }],\n          colCount: 2\n        }, {\n          type: \"checkbox\",\n          name: \"question7\",\n          title: \"In addition to teaching classes, I offer:    (please check all that apply) \",\n          choices: [{\n            value: \"item1\",\n            text: \"Workshops\"\n          }, {\n            value: \"item2\",\n            text: \"In-Home Sessions\"\n          }, {\n            value: \"item3\",\n            text: \"Retreats\"\n          }, {\n            value: \"item4\",\n            text: \"Lectures\"\n          }, {\n            value: \"item5\",\n            text: \"Destination Classes/Retreats\"\n          }, {\n            value: \"item6\",\n            text: \"Teacher Trainings\"\n          }],\n          colCount: 2\n        }],\n        title: \"Yoga Instructor Survey\"\n      }]\n    };\n\n    _this.createDTO = function (survey) {\n      var dto = {\n        Firstname: survey.Contact.Firstname,\n        Lastname: survey.Contact.Lastname,\n        studio: survey.Contact.name.Studio,\n        loc: survey.Contact.name.Location,\n        q1: survey.question1,\n        q2: survey.question2,\n        q3: survey.question3,\n        q4: survey.question4,\n        q5: survey.question5,\n        q6: survey.question6,\n        q7: survey.question7\n      };\n      return dto;\n    };\n\n    return _this;\n  }\n\n  _createClass(InstructorSurveyForm, [{\n    key: \"onComplete\",\n    //Define a callback methods on survey complete\n    value: function onComplete(survey, options) {\n      //Write survey results into database\n      console.log(\"Survey results: \" + JSON.stringify(survey.data));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //Create the model and pass it into react Survey component\n      //You may create survey model outside the render function and use it in your App or component\n      //The most model properties are reactive, on their change the component will change UI when needed.\n      var model = new Survey.Model(this.json);\n      return React.createElement(Survey.Survey, {\n        model: model,\n        onComplete: this.onComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      });\n      /*\n      //The alternative way. react Survey component will create survey model internally\n      return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n      */\n      //You may pass model properties directly into component or set it into model\n      // <Survey.Survey model={model} mode=\"display\"/>\n      //or\n      // model.mode=\"display\"\n      // <Survey.Survey model={model}/>\n      // You may change model properties outside render function.\n      //If needed react Survey Component will change its behavior and change UI.\n    }\n  }]);\n\n  return InstructorSurveyForm;\n}(React.Component);\n\nexport default InstructorSurveyForm;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/components/InstructorSurveyForm/InstructorSurveyForm.js"],"names":["Survey","React","InstructorSurveyForm","json","title","pages","name","elements","type","items","placeholder","colCount","isRequired","choices","value","text","createDTO","survey","dto","Firstname","Contact","Lastname","studio","Studio","loc","Location","q1","question1","q2","question2","q3","question3","q4","question4","q5","question5","q6","question6","q7","question7","options","console","log","JSON","stringify","data","model","Model","onComplete","Component"],"mappings":"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","sourcesContent":["import * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport React from \"react\";\n// import API from \"\";\n// import $ from \"jquery\";\n\nclass InstructorSurveyForm extends React.Component {\n  json = {\n    title: \"Yoga Instructor Survey\",\n    pages: [\n      {\n        name: \"\",\n        elements: [\n          {\n            type: \"multipletext\",\n            name: \"Contact\",\n            title: \"Contact\",\n            items: [\n              { name: \"Firstname\", placeholder: \"First name\" },\n              { name: \"Lastname\", placeholder: \"Last name\" },\n              { name: \"Studio\" },\n              { name: \"City\" },\n              { name: \"Location\" }\n            ],\n            colCount: 2\n          },\n          {\n            type: \"checkbox\",\n            name: \"question1\",\n            title: \"How long have you been teaching yoga?\",\n            isRequired: true,\n            choices: [\n              { value: \"item1\", text: \"0 -1 year\" },\n              { value: \"item2\", text: \"1-5 years\" },\n              { value: \"item3\", text: \"5-10 years\" },\n              { value: \"item4\", text: \"10+ years\" }\n            ],\n            colCount: 4\n          },\n          {\n            type: \"checkbox\",\n            name: \"question2\",\n            title: \"What levels do you teach? (please check all that apply)\",\n            choices: [\n              { value: \"item1\", text: \"Introductory\" },\n              { value: \"item2\", text: \"Beginner\" },\n              { value: \"item3\", text: \"Intermediate\" },\n              { value: \"item4\", text: \"Advanced\" },\n              { value: \"item5\", text: \"Specialty\" },\n              { value: \"item6\", text: \"Rehabilitative\" }\n            ],\n            colCount: 4\n          },\n          {\n            type: \"checkbox\",\n            name: \"question3\",\n            title: \"What styles do you teach? (please check all that apply)\",\n            choices: [\n              { value: \"item1\", text: \"Vinyasa Flow\" },\n              { value: \"item2\", text: \"Hatha\" },\n              { value: \"item3\", text: \"Iyengar\" },\n              { value: \"item4\", text: \"Viniyoga\" },\n              { value: \"item5\", text: \"Core Yoga\" },\n              { value: \"item6\", text: \"Yoga Sculpt\" },\n              { value: \"item7\", text: \"Restorative\" },\n              { value: \"item8\", text: \"Bikram\" }\n            ],\n            colCount: 4\n          },\n          {\n            type: \"checkbox\",\n            name: \"question4\",\n            title:\n              \"What special populations have you worked with (either privately or in group settings)?\",\n            choices: [\n              { value: \"item1\", text: \"Youth (5 - 12)\" },\n              { value: \"item2\", text: \"Teens (13 - 19)\" },\n              { value: \"item3\", text: \"Elite Athletes\" },\n              { value: \"item4\", text: \"Dancers\" },\n              { value: \"item5\", text: \"Injury: feet\" },\n              { value: \"item6\", text: \"Injury: ankle\" },\n              { value: \"item7\", text: \"Injury: knee\" },\n              { value: \"item8\", text: \"Injury: spinal\" },\n              { value: \"item9\", text: \"Injury: shoulder\" },\n              { value: \"item10\", text: \"Injury: wrist\" },\n              { value: \"item11\", text: \"condition: bone\" },\n              { value: \"item12\", text: \"condition: arthritis\" },\n              { value: \"item13\", text: \"condition: inflammatory\" },\n              { value: \"item14\", text: \"condition: anxiety\" },\n              { value: \"item15\", text: \"condition: heart\" },\n              { value: \"item16\", text: \"illness: cancer\" },\n              { value: \"item17\", text: \"Pre-Natal\" },\n              { value: \"item18\", text: \"Post - Natal\" }\n            ],\n            colCount: 3\n          },\n          {\n            type: \"checkbox\",\n            name: \"question5\",\n            title:\n              \"What specialty training or certifications do you have? (please check all that apply)\",\n            choices: [\n              { value: \"item1\", text: \"Yoga for Kids\" },\n              { value: \"item2\", text: \"Yoga for Teens\" },\n              { value: \"item3\", text: \"Yoga for Elite Athletes\" },\n              { value: \"item4\", text: \"Yoga for Dancers\" },\n              { value: \"item5\", text: \"Pre-Natal Yoga\" },\n              { value: \"item6\", text: \"Post-Natal Yoga\" },\n              { value: \"item7\", text: \"Yoga for Spine Health\" },\n              { value: \"item8\", text: \"Restorative Yoga\" },\n              { value: \"item9\", text: \"Core Yoga\" },\n              { value: \"item10\", text: \"Geriatric Yoga\" },\n              { value: \"item11\", text: \"Yoga for Rehabilitation\" },\n              { value: \"item12\", text: \"Yoga for 12 Step Recovery\" },\n              { value: \"item13\", text: \"Yoga for Inflammatory Conditions\" },\n              { value: \"item14\", text: \"Yoga for Healing from Trauma\" }\n            ],\n            colCount: 2\n          },\n          {\n            type: \"checkbox\",\n            name: \"question6\",\n            title:\n              \"What advanced training (academic or professional) do you have? (please check all that apply)\",\n            choices: [\n              { value: \"item1\", text: \"Licensed Physical Therapist\" },\n              { value: \"item2\", text: \"Licensed Manual Therapist\" },\n              { value: \"item3\", text: \"None\" },\n              { value: \"item4\", text: \"Psychology\" },\n              { value: \"item5\", text: \"Cranio Sacral Therapist\" },\n              { value: \"item6\", text: \"Doctor (General Practitioner)\" },\n              { value: \"item7\", text: \"Doctor (Other Specialty)\" },\n              { value: \"item8\", text: \"Phd\" }\n            ],\n            colCount: 2\n          },\n          {\n            type: \"checkbox\",\n            name: \"question7\",\n            title:\n              \"In addition to teaching classes, I offer:    (please check all that apply) \",\n            choices: [\n              { value: \"item1\", text: \"Workshops\" },\n              { value: \"item2\", text: \"In-Home Sessions\" },\n              { value: \"item3\", text: \"Retreats\" },\n              { value: \"item4\", text: \"Lectures\" },\n              { value: \"item5\", text: \"Destination Classes/Retreats\" },\n              { value: \"item6\", text: \"Teacher Trainings\" }\n            ],\n            colCount: 2\n          }\n        ],\n        title: \"Yoga Instructor Survey\"\n      }\n    ]\n  };\n\n  // onComplete = (survey, options) => {\n  //   var DTO = createDTO(survey);\n  // };\n\n  createDTO = survey => {\n    var dto = {\n      Firstname: survey.Contact.Firstname,\n      Lastname: survey.Contact.Lastname,\n      studio: survey.Contact.name.Studio,\n      loc: survey.Contact.name.Location,\n      q1: survey.question1,\n      q2: survey.question2,\n      q3: survey.question3,\n      q4: survey.question4,\n      q5: survey.question5,\n      q6: survey.question6,\n      q7: survey.question7\n    };\n\n    return dto;\n  };\n\n  //Define a callback methods on survey complete\n  onComplete(survey, options) {\n    //Write survey results into database\n    console.log(\"Survey results: \" + JSON.stringify(survey.data));\n  }\n  render() {\n    //Create the model and pass it into react Survey component\n    //You may create survey model outside the render function and use it in your App or component\n    //The most model properties are reactive, on their change the component will change UI when needed.\n\n    var model = new Survey.Model(this.json);\n    return <Survey.Survey model={model} onComplete={this.onComplete} />;\n    /*\n  //The alternative way. react Survey component will create survey model internally\n  return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n  */\n    //You may pass model properties directly into component or set it into model\n    // <Survey.Survey model={model} mode=\"display\"/>\n    //or\n    // model.mode=\"display\"\n    // <Survey.Survey model={model}/>\n    // You may change model properties outside render function.\n    //If needed react Survey Component will change its behavior and change UI.\n  }\n}\n\nexport default InstructorSurveyForm;\n"]},"metadata":{},"sourceType":"module"}