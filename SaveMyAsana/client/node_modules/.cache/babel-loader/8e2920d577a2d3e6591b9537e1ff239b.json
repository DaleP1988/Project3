{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/ClientSurvey.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport background from \"../images/floor2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport ClientSurveyForm from \"../components/ClientSurveyForm/ClientSurveyForm\";\nimport { Button, Modal } from \"react-materialize\";\nimport BestMatchCard from \"../components/BestMatchCard\";\nimport axios from \"axios\"; // on click get data (obj), call result function, display in modal...\n// add a modal to the page\n\nvar ClientSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientSurvey, _Component);\n\n  function ClientSurvey() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClientSurvey);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClientSurvey)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // BestMatch: [],\n      ModalResult: [] //make a new one\n      // async await is supported in create react app\n      // can write async like linear functions\n      // review.\n\n    };\n\n    _this.onFormSubmit = function (data) {\n      alert(data);\n      var modalRes = JSON.stringify(data);\n\n      _this.setState({\n        ModalResult: modalRes\n      }); // save the result into state\n      // and set to modal\n      // this needs to be the survey logic.....\n\n    };\n\n    return _this;\n  }\n\n  _createClass(ClientSurvey, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onSubmit(); // this.getBestMatch();\n      //can I just call all the others here?\n    } //Method for getting the saved survey from the db\n    // getBestMatch = () => {\n    //   API.bestMatch().then(res => {\n    //     this.setState({ BestMatch: res.data });\n    //can I add code right into here for the rendering?\n    // });\n    // };\n\n  }, {\n    key: \"render\",\n    // renderModal = () => {\n    //   return this.state.modalRes.map(modal => (\n    //     <BestMatchCard>\n    //       -id={modal.id}\n    //       key={modal._id}\n    //       name={modal.Firstname + modal.Lastname}\n    //       studio={modal.Studio}\n    //       location={modal.City}\n    //     </BestMatchCard>\n    //   ));\n    // };\n    // data is passed in from the form\n    // method for rendering a results div\n    //\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parallax-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(ClientSurveyForm, {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        header: \"Instructor Matches!\",\n        className: \" waves-effect waves-light\",\n        trigger: React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"View Matches\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"These are your suggested matches:\")))), React.createElement(\"div\", {\n        className: \"parallax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"background-img\",\n        src: background,\n        alt: \"Unsplashed background img 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"section-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Namaste\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\\\"Yoga is a light which once lit will never dim, the better your practice the brighter your flame.\\\"\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"- B.K.S. Iyengar\"))), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ClientSurvey;\n}(Component);\n\nexport default ClientSurvey;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/ClientSurvey.js"],"names":["React","Component","Col","Row","Container","background","Link","ClientSurveyForm","Button","Modal","BestMatchCard","axios","ClientSurvey","state","ModalResult","onFormSubmit","data","alert","modalRes","JSON","stringify","setState","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport background from \"../images/floor2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport ClientSurveyForm from \"../components/ClientSurveyForm/ClientSurveyForm\";\nimport { Button, Modal } from \"react-materialize\";\nimport BestMatchCard from \"../components/BestMatchCard\";\nimport axios from \"axios\";\n\n// on click get data (obj), call result function, display in modal...\n// add a modal to the page\n\nclass ClientSurvey extends Component {\n  state = {\n    // BestMatch: [],\n    ModalResult: []\n    //make a new one\n    // async await is supported in create react app\n    // can write async like linear functions\n    // review.\n  };\n\n  componentDidMount() {\n    this.onSubmit();\n    // this.getBestMatch();\n    //can I just call all the others here?\n  }\n\n  //Method for getting the saved survey from the db\n  // getBestMatch = () => {\n  //   API.bestMatch().then(res => {\n  //     this.setState({ BestMatch: res.data });\n\n  //can I add code right into here for the rendering?\n  // });\n  // };\n\n  onFormSubmit = data => {\n    alert(data);\n    var modalRes = JSON.stringify(data);\n    this.setState({ ModalResult: modalRes });\n\n    // save the result into state\n    // and set to modal\n    // this needs to be the survey logic.....\n  };\n\n  // renderModal = () => {\n  //   return this.state.modalRes.map(modal => (\n  //     <BestMatchCard>\n  //       -id={modal.id}\n  //       key={modal._id}\n  //       name={modal.Firstname + modal.Lastname}\n  //       studio={modal.Studio}\n  //       location={modal.City}\n  //     </BestMatchCard>\n  //   ));\n  // };\n\n  // data is passed in from the form\n\n  // method for rendering a results div\n\n  //\n  render() {\n    return (\n      <div>\n        <div className=\"parallax-container\">\n          <Container>\n            <Row>\n              <ClientSurveyForm onSubmit={this.onFormSubmit} />\n            </Row>\n            <Row>\n              <Modal\n                header=\"Instructor Matches!\"\n                className=\" waves-effect waves-light\"\n                trigger={<Button>View Matches</Button>}\n              >\n                <p>These are your suggested matches:</p>\n\n                {/* {this.renderModal()} */}\n              </Modal>\n            </Row>\n          </Container>\n          <div className=\"parallax\">\n            <img\n              className=\"background-img\"\n              src={background}\n              alt=\"Unsplashed background img 1\"\n            />\n          </div>\n        </div>\n        <div className=\"section-white\">\n          <h2 className=\"center\">Namaste</h2>\n          <Row>\n            <div className=\"center\">\n              <Col size=\"3\" />\n            </div>\n            <div className=\"center\">\n              <Col size=\"6\">\n                <p>\n                  \"Yoga is a light which once lit will never dim, the better\n                  your practice the brighter your flame.\"\n                </p>\n                <p>- B.K.S. Iyengar</p>\n              </Col>\n            </div>\n            <div className=\"center\">\n              <Col size=\"3\" />\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClientSurvey;\n"]},"metadata":{},"sourceType":"module"}