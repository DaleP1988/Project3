{"ast":null,"code":"import _classCallCheck from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/ClientSurvey.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport background from \"../images/floor2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport ClientSurveyForm from \"../components/ClientSurveyForm/ClientSurveyForm\";\nimport { Button, Modal } from \"react-materialize\";\nimport BestMatchCard from \"../components/BestMatchCard\"; // on click get data (obj), call result function, display in modal...\n// add a modal to the page\n\nvar ClientSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientSurvey, _Component);\n\n  function ClientSurvey() {\n    _classCallCheck(this, ClientSurvey);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ClientSurvey).apply(this, arguments));\n  }\n\n  _createClass(ClientSurvey, [{\n    key: \"render\",\n    // state = {\n    //   iSurvey: [],\n    //   iProf: []\n    // };\n    // componentDidMount() {\n    //   this.getInstructorProfile();\n    //   //can I just call all the others here?\n    // }\n    // //Method for getting the saved survey from the db\n    // getInstructorProfile = () => {\n    //   API.getIP().then(res => {\n    //     this.setState({ iSurvey: res.data });\n    //     //can I add code right into here for the rendering?\n    //   });\n    // };\n    // // method for rendering a results div\n    // renderinstructorProfContact = () => {\n    //   return this.state.iProf.map(iProf => (\n    //     <InstructorResultContact>\n    //       {/* need to make a results component */}\n    //       {/* this needs to reference the client components */}\n    //       -id={iProf.id}\n    //       key={iProf._id}\n    //       name={iProf.Firstname + iProf.Lastname}\n    //       email={iProf.email}\n    //       phone={iProf.phone}\n    //       city={iProf.city}\n    //       loc={iProf.loc}\n    //       img={iProf.img}\n    //     </InstructorResultContact>\n    //   ));\n    // };\n    // renderinstructorProfBio = () => {\n    //   return this.state.iProf.map(iProf => (\n    //     <InstructorResultBio>\n    //       {/* need to make a results component */}\n    //       {/* this needs to reference the client components */}\n    //       -id={iProf.id}\n    //       key={iProf._id}\n    //       about={iProf.q1}\n    //       style={iProf.q2}\n    //       background={iProf.q3}\n    //       transformative={iProf.q4}\n    //       message={iProf.q5}\n    //       wisdom={iProf.q6}\n    //       goodie={iProf.q7}\n    //     </InstructorResultBio>\n    //   ));\n    // };\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parallax-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ClientSurveyForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        header: \"Instructor Matches!\",\n        className: \" waves-effect waves-light\",\n        trigger: React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"View Matches\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"These are your suggested matches:\"), React.createElement(BestMatchCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(BestMatchCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(BestMatchCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(BestMatchCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(BestMatchCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"parallax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"background-img\",\n        src: background,\n        alt: \"Unsplashed background img 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"section-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Namaste\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\\"Yoga is a light which once lit will never dim, the better your practice the brighter your flame.\\\"\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"- B.K.S. Iyengar\"))), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ClientSurvey;\n}(Component);\n\nexport default ClientSurvey;","map":{"version":3,"sources":["/Users/garnetdianthus/Repoman/Project3/SaveMyAsana/client/src/pages/ClientSurvey.js"],"names":["React","Component","Col","Row","Container","background","Link","ClientSurveyForm","Button","Modal","BestMatchCard","ClientSurvey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;AACA;;IAEMC,Y;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAC,qBADT;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAGE,QAAA,OAAO,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CALF,EAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CAJF,CADF,EAoBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,GAAG,EAAEN,UAFP;AAGE,QAAA,GAAG,EAAC,6BAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApBF,CADF,EA6BE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CADF,CAJF,EAaE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,CAFF,CA7BF,CADF;AAoDD;;;;EA9GwBJ,S;;AAiH3B,eAAeU,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport background from \"../images/floor2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport ClientSurveyForm from \"../components/ClientSurveyForm/ClientSurveyForm\";\nimport { Button, Modal } from \"react-materialize\";\nimport BestMatchCard from \"../components/BestMatchCard\";\n\n// on click get data (obj), call result function, display in modal...\n// add a modal to the page\n\nclass ClientSurvey extends Component {\n  // state = {\n  //   iSurvey: [],\n  //   iProf: []\n  // };\n\n  // componentDidMount() {\n  //   this.getInstructorProfile();\n  //   //can I just call all the others here?\n  // }\n\n  // //Method for getting the saved survey from the db\n  // getInstructorProfile = () => {\n  //   API.getIP().then(res => {\n  //     this.setState({ iSurvey: res.data });\n\n  //     //can I add code right into here for the rendering?\n  //   });\n  // };\n\n  // // method for rendering a results div\n\n  // renderinstructorProfContact = () => {\n  //   return this.state.iProf.map(iProf => (\n  //     <InstructorResultContact>\n  //       {/* need to make a results component */}\n  //       {/* this needs to reference the client components */}\n  //       -id={iProf.id}\n  //       key={iProf._id}\n  //       name={iProf.Firstname + iProf.Lastname}\n  //       email={iProf.email}\n  //       phone={iProf.phone}\n  //       city={iProf.city}\n  //       loc={iProf.loc}\n  //       img={iProf.img}\n  //     </InstructorResultContact>\n  //   ));\n  // };\n\n  // renderinstructorProfBio = () => {\n  //   return this.state.iProf.map(iProf => (\n  //     <InstructorResultBio>\n  //       {/* need to make a results component */}\n  //       {/* this needs to reference the client components */}\n  //       -id={iProf.id}\n  //       key={iProf._id}\n  //       about={iProf.q1}\n  //       style={iProf.q2}\n  //       background={iProf.q3}\n  //       transformative={iProf.q4}\n  //       message={iProf.q5}\n  //       wisdom={iProf.q6}\n  //       goodie={iProf.q7}\n  //     </InstructorResultBio>\n  //   ));\n  // };\n\n  render() {\n    return (\n      <div>\n        <div className=\"parallax-container\">\n          <Container>\n            <Row>\n              <ClientSurveyForm />\n            </Row>\n            <Row>\n              <Modal\n                header=\"Instructor Matches!\"\n                className=\" waves-effect waves-light\"\n                trigger={<Button>View Matches</Button>}\n              >\n                <p>These are your suggested matches:</p>\n                <BestMatchCard />\n                <BestMatchCard />\n                <BestMatchCard />\n                <BestMatchCard />\n                <BestMatchCard />\n              </Modal>\n            </Row>\n          </Container>\n          <div className=\"parallax\">\n            <img\n              className=\"background-img\"\n              src={background}\n              alt=\"Unsplashed background img 1\"\n            />\n          </div>\n        </div>\n        <div className=\"section-white\">\n          <h2 className=\"center\">Namaste</h2>\n          <Row>\n            <div className=\"center\">\n              <Col size=\"3\" />\n            </div>\n            <div className=\"center\">\n              <Col size=\"6\">\n                <p>\n                  \"Yoga is a light which once lit will never dim, the better\n                  your practice the brighter your flame.\"\n                </p>\n                <p>- B.K.S. Iyengar</p>\n              </Col>\n            </div>\n            <div className=\"center\">\n              <Col size=\"3\" />\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClientSurvey;\n"]},"metadata":{},"sourceType":"module"}